import 'package:flutter/material.dart';
import 'package:sintaveeapp/AccountPageApp/account_page.dart';
import '../HomepageApp/my_homepage.dart';
import '../Bill_Page/BillSale_Page.dart';
import '../Sale_Page/sale_product.dart';
import '../Database/product_model.dart';
import 'package:simple_barcode_scanner/simple_barcode_scanner.dart';
import 'package:hive/hive.dart';

class BottomNavbar extends StatelessWidget {
  const BottomNavbar(
      {super.key, required this.currentIndex, required this.onTap});

  final int currentIndex;
  final Function(int) onTap;

  void _handleNavigation(int index, BuildContext context) async {
    if (index == 0) {
      Navigator.pushReplacement(
        context,
        MaterialPageRoute(builder: (context) => MyHomepage()),
      );
    } else if (index == 1) {
      Navigator.push(
        context,
        MaterialPageRoute(builder: (context) => Myaccount()),
      );
    } else if (index == 2) {
      // üëâ ‡∏™‡πÅ‡∏Å‡∏ô‡∏ö‡∏≤‡∏£‡πå‡πÇ‡∏Ñ‡πâ‡∏î ‡πÅ‡∏•‡πâ‡∏ß‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ SalePage ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
      final result = await Navigator.push(
        context,
        MaterialPageRoute(
            builder: (context) => const SimpleBarcodeScannerPage()),
      );

      if (result != null && result != '-1') {
        final productBox = Hive.box<ProductModel>('products');
        final matching = productBox.values.firstWhere(
          (p) => p.barcode == result,
          orElse: () => ProductModel(
            name: '‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤',
            Retail_price: 0,
            Wholesale_price: 0,
            quantity: 0,
            category: '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏',
          ),
        );

        if (matching.name != '‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤') {
          Navigator.push(
            context,
            MaterialPageRoute(
              builder: (_) => SalePage(
                initialBarcode: result, // üëà ‡∏™‡πà‡∏á barcode ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ SalePage
              ),
            ),
          );
        } else {
          ScaffoldMessenger.of(context).showSnackBar(
            const SnackBar(content: Text("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏î‡πâ‡∏ß‡∏¢‡∏ö‡∏≤‡∏£‡πå‡πÇ‡∏Ñ‡πâ‡∏î‡∏ô‡∏µ‡πâ")),
          );
        }
      }
    } else if (index == 3) {
      Navigator.push(
        context,
        MaterialPageRoute(builder: (context) => BillSale_Page()),
      );
    } else {
      onTap(index);
    }
  }

  @override
  Widget build(BuildContext context) {
    return BottomNavigationBar(
      type: BottomNavigationBarType.fixed,
      backgroundColor:
          const Color.fromARGB(230, 0, 0, 0), //  ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏µ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏Ç‡∏≠‡∏á‡πÅ‡∏ñ‡∏ö‡∏ö‡∏≤‡∏£‡πå
      showSelectedLabels: false,
      showUnselectedLabels: false,
      selectedItemColor: const Color.fromARGB(255, 235, 157, 40),
      unselectedItemColor: const Color.fromARGB(255, 228, 221, 221),
      elevation: 0, //  ‡∏•‡∏î‡πÄ‡∏á‡∏≤‡∏Ç‡∏≠‡∏á BottomNavigationBar
      currentIndex: currentIndex,
      onTap: (index) => _handleNavigation(index, context),
      items: [
        BottomNavigationBarItem(
            icon: Icon(
              Icons.home,
            ),
            label: "‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å"),
        BottomNavigationBarItem(
            icon: Icon(
              Icons.credit_card,
            ),
            label: "‡∏ö‡∏±‡∏ç‡∏ä‡∏µ"),
        BottomNavigationBarItem(
          icon: Icon(Icons.qr_code_scanner),
          label: "‡∏™‡πÅ‡∏Å‡∏ô‡∏ö‡∏≤‡∏£‡πå‡πÇ‡∏Ñ‡πâ‡∏î",
        ),
        BottomNavigationBarItem(
            icon: Icon(Icons.receipt_long), label: "‡∏ö‡∏¥‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤"),
        BottomNavigationBarItem(
            icon: Icon(Icons.description), label: "‡∏ö‡∏¥‡∏•‡∏ã‡∏±‡∏û‡∏û‡∏≤‡∏¢‡πÄ‡∏≠‡∏≠‡∏£‡πå"),
      ],
    );
  }
}
//
